// –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ SDK
function initializeAddon() {
  if (typeof window.Addon === 'undefined') {
    console.error('SDK Kaiten –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
    return;
  }

  console.log('SDK Kaiten loaded, initializing...');

  try {
    window.Addon.initialize({
      card_buttons: async (context) => {
        console.log('Card buttons context received');
        
        try {
          const permissions = context.getPermissions();
          if (!permissions.card.update) {
            console.log('No card update permissions');
            return [];
          }

          return [{
            text: 'üåê –ü–µ—Ä–µ–≤–æ–¥—ã',
            callback: async (callbackContext) => {
              console.log('Translation button clicked');
              try {
                const iframeUrl = window.location.origin + '/translations';
                
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
                if (typeof callbackContext.openIframe === 'function') {
                  callbackContext.openIframe(iframeUrl);
                } else {
                  // Fallback –Ω–∞ postMessage
                  window.parent.postMessage({
                    type: 'kaiten-plugin-iframe-open',
                    url: iframeUrl
                  }, '*');
                }
              } catch (error) {
                console.error('Error opening iframe:', error);
              }
            }
          }];
        } catch (error) {
          console.error('Error in card_buttons handler:', error);
          return [];
        }
      }
    });
    
    console.log('Addon initialized successfully');
  } catch (error) {
    console.error('Error initializing addon:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–æ–≥–¥–∞ SDK –≥–æ—Ç–æ–≤
if (typeof window.Addon !== 'undefined') {
  initializeAddon();
} else {
  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ SDK
  document.addEventListener('DOMContentLoaded', function() {
    if (typeof window.Addon !== 'undefined') {
      initializeAddon();
    } else {
      // –ü—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
      setTimeout(initializeAddon, 1000);
    }
  });
}
